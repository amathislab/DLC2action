##
## Copyright 2020-present by A. Mathis Group and contributors. All rights reserved.
##
## This project and all its files are licensed under GNU AGPLv3 or later version. 
## A copy is included in dlc2action/LICENSE.AGPL.
##

# set; a list of names of the features to extract (a subset of available keys; run project.help("features") for more info)
keys: !!set {"coord_diff", "center", "intra_distance", "speed_direction", "speed_value", "angle_speeds", "acc_joints", "inter_distance",}
averaging_window: 1 # int; if >1, features are averaged with a moving window of this size (in frames)
distance_pairs: null # list; a list of bodypart name tuples (e.g. `[("tail", "nose")]`) to compute distances for when `"intra_distance"` is in `keys` (by default all distances are computed)
angle_pairs: null # list; a list of bodypart name tuples (e.g. `[("ear1", "nose", "ear2")]`) for the angle between `"ear1"--"nose"` and `"nose"--"ear2"` lines) to compute angle cosines for when `"angles"` is in `keys` (by default no angles are computed)
neighboring_frames : 0 # int; if >0, this number of neighboring frames is aggregated in the center frame features (generally not recommended)
area_vertices: null # list; a list of bodypart name tuples of any length >= 3 (e.g. `[("ear1", "nose", "ear2", "spine1")]`) that define polygons to compute areas for when `"areas"` is in `keys` (by default no areas are computed)
zone_vertices: null # dict; a dictionary of bodypart name tuples of any length >= 3 that define zones for `"zone_bools"`and `"zone_distances"` features; keys should be zone names and values should be tuples that define the polygons (e.g. `{"main_area": ("x_min", "x_max", "y_max", "y_min"))}`)
zone_bools: null # list; a list of zone and bodypart name tuples to compute binary identifiers for (1 if an animal is within the polygon or 0 if it's outside) (e.g. `[("main_area", "nose")]`); the zones should be defined in the `zone_vertices` parameter; this is only computed if `"zone_bools"` is in `keys`
zone_distances : null # list; a list of zone and bodypart name tuples to compute distances for (distance from the bodypart to the closest of the boundaries) (e.g. `[("main_area", "nose")]`); the zones should be defined in the `zone_vertices` parameter; this is only computed if `"zone_distances"` is in `keys`
